

package YourLogo_Assessment;

import static org.testng.Assert.fail;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class TC1_SearchAndVerify {
	
	public WebDriver driver;
	private String baseUrl= "http://automationpractice.com/";
	private String search_string = null;
	

	public TC1_SearchAndVerify()
	{
		this.search_string = "Dress";
	}
	
	public void set_search_string(String _search_string)
	{
		this.search_string = _search_string;
	}
	
	
	@BeforeTest
	public void OpenBrowser() 
	{
		System.setProperty("webdriver.chrome.driver","./Drivers/Chromedriver.exe");
		
		driver = new ChromeDriver();
		 
		driver.manage().window().maximize();
 
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		
	}
	
	@Test(priority=1)
	
	public void OpenURL() throws InterruptedException { 
		
		driver.get(baseUrl);
		
		String Expecte_title = driver.getTitle();
		
		System.out.println(Expecte_title);
		
		if (Expecte_title.equals("My Store")) {
			System.out.println("Application is Launchced Successfully");
		}
		
		else {
			System.out.println("Application is not Launchced Successfully");
			
		}
		
		driver.manage().timeouts().implicitlyWait(210, TimeUnit.SECONDS);
		
	}
	

	@Test(priority=2)
	
	public void PerformSearchAndValidate () {

		driver.findElement(By.id("search_query_top")).click();
		driver.findElement(By.id("search_query_top")).clear();
		driver.findElement(By.id("search_query_top")).sendKeys(self.);
		
		driver.findElement(By.name("submit_search")).click();
		
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		
		String first_search_result_string = driver.findElement(By.xpath("//*[@id=\"center_column\"]/ul/li[1]/div/div[2]/h5/a")).getText();
		System.out.println("Input Search string:" +  this.search_string + ", First Search Result occurence:" + first_search_result_string);
		if (first_search_result_string.contains(this.search_string))
		{
			System.out.println("Input Search string is found in First Search Result occurence");
		}
		else
		{
			fail("Input Search string is not found in First Search Result occurence");
		}

	}
	
	@AfterTest	
	public void tearDown() throws Exception 
	{
		driver.quit();
	}

}
